#!/usr/bin/env node

function getTagContent(content, tag) {
  const regex = new RegExp(`<${tag}>([\\s\\S]*?)<\\/${tag}>`);
  const match = content.match(regex);
  return match ? match[1].trim() : "";
}

const fs = require("fs");
const path = require("path");
const diff = require("diff");

function diffInputOutput(dir, threshold) {
  const files = fs.readdirSync(dir);

  files.forEach((file) => {
    const filePath = path.join(dir, file);
    const stats = fs.statSync(filePath);

    if (stats.isFile()) {
      const content = fs.readFileSync(filePath, "utf8");

      const input = getTagContent(content, "input");
      const output = getTagContent(content, "output");

      if (!input || !output) return;

      const diffResult = diff.diffLines(input, output);

      let completelyDeletedLines = 0;
      diffResult.forEach((part) => {
        if (
          part.removed &&
          !diffResult.some(
            (otherPart) =>
              otherPart.added &&
              otherPart.value.includes(part.value.replace(/\s+/g, "")),
          )
        ) {
          completelyDeletedLines += part.count;
        }
      });

      if (completelyDeletedLines > threshold) {
        console.log(`${filePath}: ${completelyDeletedLines} deleted lines`);
      }
    }
  });
}

if (require.main === module) {
  const args = process.argv.slice(2);
  const dir = args[0];
  const threshold = parseInt(args[1]) || 20;

  if (!dir) {
    console.error("Please provide a directory path");
    process.exit(1);
  }

  diffInputOutput(dir, threshold);
}
